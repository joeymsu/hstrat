[tox]
envlist = py37, py38, py39, flake8, mypy, py310, py311
isolated_build = True

[coverage:report]
exclude_lines =
  # Have to re-enable the standard pragma
  pragma: no cover

  # Don't complain about missing debug-only code:
  def __repr__
  if self\.debug

  # Don't complain if tests don't hit defensive assertion code:
  raise AssertionError
  raise NotImplementedError

  # Don't complain if non-runnable code isn't run:
  if 0:
  if __name__ == .__main__.:

[coverage:run]
source =
  hstrat

[flake8]
extend-ignore = D203, E501, F403, W503

[pydocstyle]
convention = numpy
add_ignore = D100, D101, D103, D104, D105, D205, D400

[gh-actions]
python =
    3.8: py38, mypy
    3.9: py39
    3.10: py310
    3.11: py311

[testenv:flake8]
basepython = python
deps = flake8
commands = flake8 hstrat tests

[testenv:py37]
deps =
    -r{toxinidir}/requirements-dev/py37/requirements-testing.txt

[testenv:py38]
deps =
    -r{toxinidir}/requirements-dev/py38/requirements-testing.txt

[testenv:py39]
deps =
    -r{toxinidir}/requirements-dev/py39/requirements-testing.txt

[testenv:py310]
deps =
    -r{toxinidir}/requirements-dev/py310/requirements-testing.txt

[testenv:py311]
deps =
    -r{toxinidir}/requirements-dev/py311/requirements-testing.txt

[testenv]
setenv =
    PYTHONPATH = {toxinidir}
commands =
    pip install -U pip
    pytest -n auto {toxinidir}/tests/test_hstrat
